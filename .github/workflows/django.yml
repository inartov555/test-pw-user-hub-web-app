name: Django/Playwright CI

on:
  push:
    branches: ["main"]
    paths:
      - "**"
      - ".github/workflows/django-ci.yml"
  pull_request:
    branches: ["main"]
    paths:
      - "**"
      - ".github/workflows/django-ci.yml"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  e2e:
    name: Build & Test (Pytest + Playwright)
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Compose — start web & ui (detached)
        run: |
          docker compose up -d web ui
          docker compose ps
        env:
          # Adjust if your services need env; compose also reads .env automatically if present.
          CI: "1"

      - name: Wait for UI on :5173
        run: |
          tries=60
          until curl -fsS http://localhost:5173/ >/dev/null 2>&1; do
            tries=$((tries-1))
            if [ $tries -le 0 ]; then
              echo "UI not ready on :5173" >&2
              docker compose logs --no-color ui || true
              exit 1
            fi
            sleep 2
          done

      - name: Run tests service (Playwright all browsers)
        # The tests service entrypoint installs browsers and runs:
        #   pytest -n auto --all-browsers
        run: |
          docker compose run --rm \
            -e CI=1 \
            -e BASE_URL=http://ui:5173 \
            tests
        env:
          CI: "1"

      - name: Copy Playwright HTML report (if produced)
        if: always()
        run: |
          mkdir -p reporting-upload
          # reports are written into the bind mount (./reporting/pw-html) by the tests container
          if [ -d reporting/pw-html ]; then
            cp -R reporting/pw-html reporting-upload/
          fi
          # Fallback: collect any junit/html generated by pytest if you add them later
          if compgen -G "reporting/*.html" > /dev/null; then
            cp reporting/*.html reporting-upload/ || true
          fi

      - name: Upload test report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: reporting-upload
          if-no-files-found: warn
          retention-days: 7

      - name: Show container logs on failure
        if: failure()
        run: |
          docker compose logs --no-color web || true
          docker compose logs --no-color ui || true

      - name: Docker Compose — down
        if: always()
        run: docker compose down -v
