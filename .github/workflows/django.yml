name: Django CI

on:
  push:
    branches: [ "main" ]
    paths:
      - "config/**"
      - "core/**"
      - "pages/**"
      - "utils/**"
      - "tests/**"
      - "manage.py"
      - "requirements*.txt"
      - "pyproject.toml"
      - ".github/workflows/django.yml"
  pull_request:
    branches: [ "main" ]
    paths:
      - "config/**"
      - "core/**"
      - "pages/**"
      - "utils/**"
      - "tests/**"
      - "manage.py"
      - "requirements*.txt"
      - "pyproject.toml"
      - ".github/workflows/django.yml"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: |
            requirements.txt
            pyproject.toml

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Provide minimal env vars so Django can start
      - name: Django checks
        env:
          DJANGO_SETTINGS_MODULE: config.settings
          # Minimal secrets/settings commonly required by projects during CI
          SECRET_KEY: ci-not-secret
          DEBUG: "0"
        run: |
          python manage.py check --deploy -v 2

      - name: Check for missing migrations
        env:
          DJANGO_SETTINGS_MODULE: config.settings
          SECRET_KEY: ci-not-secret
          DEBUG: "0"
        run: |
          python manage.py makemigrations --check --dry-run

      - name: Migrate DB
        env:
          DJANGO_SETTINGS_MODULE: config.settings
          SECRET_KEY: ci-not-secret
          DEBUG: "0"
        run: |
          python manage.py migrate --noinput

      - name: Run tests
        env:
          DJANGO_SETTINGS_MODULE: config.settings
          SECRET_KEY: ci-not-secret
          DEBUG: "0"
        run: |
          # If you prefer pytest (and it's in requirements), swap to: pytest -q
          python manage.py test --noinput -v 2
