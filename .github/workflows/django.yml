name: Django CI

on:
  push:
    branches: [ "main" ]
    paths:
      - "config/**"
      - "core/**"
      - "pages/**"
      - "utils/**"
      - "tests/**"
      - "requirements*.txt"
      - "pyproject.toml"
      - ".github/workflows/django.yml"
  pull_request:
    branches: [ "main" ]
    paths:
      - "config/**"
      - "core/**"
      - "pages/**"
      - "utils/**"
      - "tests/**"
      - "requirements*.txt"
      - "pyproject.toml"
      - ".github/workflows/django.yml"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: |
            requirements.txt
            pyproject.toml

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          elif [ -f requirements-dev.txt ]; then
            pip install -r requirements-dev.txt
          else
            echo "No requirements.txt found; attempting install from pyproject if possible"
            if [ -f pyproject.toml ]; then pip install . || true; fi
          fi

      # Use Django's module runner (no manage.py needed)
      - name: Django system checks
        env:
          DJANGO_SETTINGS_MODULE: config.settings
          SECRET_KEY: ci-not-secret
          DEBUG: "0"
        run: |
          python -m django --version
          python -m django check --deploy -v 2

      - name: Check for missing migrations
        env:
          DJANGO_SETTINGS_MODULE: config.settings
          SECRET_KEY: ci-not-secret
          DEBUG: "0"
        run: |
          python -m django makemigrations --check --dry-run

      - name: Migrate DB
        env:
          DJANGO_SETTINGS_MODULE: config.settings
          SECRET_KEY: ci-not-secret
          DEBUG: "0"
        run: |
          python -m django migrate --noinput

      - name: Run tests
        env:
          DJANGO_SETTINGS_MODULE: config.settings
          SECRET_KEY: ci-not-secret
          DEBUG: "0"
        run: |
          if python - <<'PY'
import importlib.util, sys
sys.exit(0 if importlib.util.find_spec("pytest") else 1)
PY
          then
            pytest -q
          else
            python -m django test --noinput -v 2
          fi
