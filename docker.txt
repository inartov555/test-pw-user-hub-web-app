the issue django check fails with

Run if python -c "import importlib.util; import sys; sys.exit(0 if importlib.util.find_spec('pytest') else 1)"; then

tests/test_login.py::test_login_success_regular[chromium] ERROR          [  1%]
tests/test_login.py::test_login_success_admin[chromium] ERROR            [  3%]
tests/test_login.py::test_login_validation_messages[chromium---Username] ERROR [  5%]
tests/test_login.py::test_login_validation_messages[chromium-test1--Password] ERROR [  7%]
tests/test_login.py::test_login_validation_messages[chromium-notexist-badpass-Invalid username or password] ERROR [  9%]
tests/test_login.py::test_login_remember_me_sets_persistent_storage[chromium] ERROR [ 11%]
tests/test_login.py::test_redirects_to_login_when_unauthenticated[chromium] ERROR [ 12%]
tests/test_signup.py::test_signup_happy_path_then_login[chromium] ERROR  [ 14%]
tests/test_signup.py::test_signup_validation[chromium-----Username] ERROR [ 16%]
tests/test_signup.py::test_signup_validation[chromium-newguy-not-an-email-StrongPassw0rd!-StrongPassw0rd!-email] ERROR [ 18%]
tests/test_signup.py::test_signup_validation[chromium-newguy2-guy2@example.com-short-short-Password must be at least] ERROR [ 20%]
tests/test_signup.py::test_signup_validation[chromium-test1-taken@example.com-StrongPassw0rd!-StrongPassw0rd!-Username already exists] ERROR [ 22%]
tests/test_signup.py::test_signup_validation[chromium-mismatch-mismatch@example.com-StrongPassw0rd!-Different1!-match] ERROR [ 24%]
tests/test_users_table.py::test_users_table_visible_for_logged_in_user[chromium] ERROR [ 25%]
tests/test_users_table.py::test_users_table_admin_has_controls[chromium] ERROR [ 27%]
tests/test_users_table.py::test_users_table_search_filters_rows[chromium] ERROR [ 29%]
tests/test_users_table.py::test_users_table_sorting_by_username_if_available[chromium] ERROR [ 31%]
tests/test_users_table.py::test_logout_via_header_returns_to_login[chromium] ERROR [ 33%]
tests/test_login.py::test_login_success_regular[firefox] ERROR           [ 35%]
tests/test_login.py::test_login_success_admin[firefox] ERROR             [ 37%]
tests/test_login.py::test_login_validation_messages[firefox---Username] ERROR [ 38%]
tests/test_login.py::test_login_validation_messages[firefox-test1--Password] ERROR [ 40%]
tests/test_login.py::test_login_validation_messages[firefox-notexist-badpass-Invalid username or password] ERROR [ 42%]
tests/test_login.py::test_login_remember_me_sets_persistent_storage[firefox] ERROR [ 44%]
tests/test_login.py::test_redirects_to_login_when_unauthenticated[firefox] ERROR [ 46%]
tests/test_signup.py::test_signup_happy_path_then_login[firefox] ERROR   [ 48%]
tests/test_signup.py::test_signup_validation[firefox-----Username] ERROR [ 50%]
tests/test_signup.py::test_signup_validation[firefox-newguy-not-an-email-StrongPassw0rd!-StrongPassw0rd!-email] ERROR [ 51%]
tests/test_signup.py::test_signup_validation[firefox-newguy2-guy2@example.com-short-short-Password must be at least] ERROR [ 53%]
tests/test_signup.py::test_signup_validation[firefox-test1-taken@example.com-StrongPassw0rd!-StrongPassw0rd!-Username already exists] ERROR [ 55%]
tests/test_signup.py::test_signup_validation[firefox-mismatch-mismatch@example.com-StrongPassw0rd!-Different1!-match] ERROR [ 57%]
tests/test_users_table.py::test_users_table_visible_for_logged_in_user[firefox] ERROR [ 59%]
tests/test_users_table.py::test_users_table_admin_has_controls[firefox] ERROR [ 61%]
tests/test_users_table.py::test_users_table_search_filters_rows[firefox] ERROR [ 62%]
tests/test_users_table.py::test_users_table_sorting_by_username_if_available[firefox] ERROR [ 64%]
tests/test_users_table.py::test_logout_via_header_returns_to_login[firefox] ERROR [ 66%]
tests/test_login.py::test_login_success_regular[webkit] ERROR            [ 68%]
tests/test_login.py::test_login_success_admin[webkit] ERROR              [ 70%]
tests/test_login.py::test_login_validation_messages[webkit---Username] ERROR [ 72%]
tests/test_login.py::test_login_validation_messages[webkit-test1--Password] ERROR [ 74%]
tests/test_login.py::test_login_validation_messages[webkit-notexist-badpass-Invalid username or password] ERROR [ 75%]
tests/test_login.py::test_login_remember_me_sets_persistent_storage[webkit] ERROR [ 77%]
tests/test_login.py::test_redirects_to_login_when_unauthenticated[webkit] ERROR [ 79%]
tests/test_signup.py::test_signup_happy_path_then_login[webkit] ERROR    [ 81%]
tests/test_signup.py::test_signup_validation[webkit-----Username] ERROR  [ 83%]
tests/test_signup.py::test_signup_validation[webkit-newguy-not-an-email-StrongPassw0rd!-StrongPassw0rd!-email] ERROR [ 85%]
tests/test_signup.py::test_signup_validation[webkit-newguy2-guy2@example.com-short-short-Password must be at least] ERROR [ 87%]
tests/test_signup.py::test_signup_validation[webkit-test1-taken@example.com-StrongPassw0rd!-StrongPassw0rd!-Username already exists] ERROR [ 88%]
tests/test_signup.py::test_signup_validation[webkit-mismatch-mismatch@example.com-StrongPassw0rd!-Different1!-match] ERROR [ 90%]
tests/test_users_table.py::test_users_table_visible_for_logged_in_user[webkit] ERROR [ 92%]
tests/test_users_table.py::test_users_table_admin_has_controls[webkit] ERROR [ 94%]
tests/test_users_table.py::test_users_table_search_filters_rows[webkit] ERROR [ 96%]
tests/test_users_table.py::test_users_table_sorting_by_username_if_available[webkit] ERROR [ 98%]
tests/test_users_table.py::test_logout_via_header_returns_to_login[webkit] ERROR [100%]

==================================== ERRORS ====================================
____________ ERROR at setup of test_login_success_regular[chromium] ____________

request = <SubRequest 'browser' for <Function test_login_success_regular[chromium]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:34: in _launch
    return pw.chromium.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d6edf10>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d703920>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
_____________ ERROR at setup of test_login_success_admin[chromium] _____________

request = <SubRequest 'browser' for <Function test_login_success_regular[chromium]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:34: in _launch
    return pw.chromium.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d6edf10>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d703920>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
____ ERROR at setup of test_login_validation_messages[chromium---Username] _____

request = <SubRequest 'browser' for <Function test_login_success_regular[chromium]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:34: in _launch
    return pw.chromium.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d6edf10>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d703920>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
__ ERROR at setup of test_login_validation_messages[chromium-test1--Password] __

request = <SubRequest 'browser' for <Function test_login_success_regular[chromium]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:34: in _launch
    return pw.chromium.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d6edf10>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d703920>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_login_validation_messages[chromium-notexist-badpass-Invalid username or password] _

request = <SubRequest 'browser' for <Function test_login_success_regular[chromium]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:34: in _launch
    return pw.chromium.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d6edf10>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d703920>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
__ ERROR at setup of test_login_remember_me_sets_persistent_storage[chromium] __

request = <SubRequest 'browser' for <Function test_login_success_regular[chromium]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:34: in _launch
    return pw.chromium.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d6edf10>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d703920>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
___ ERROR at setup of test_redirects_to_login_when_unauthenticated[chromium] ___

request = <SubRequest 'browser' for <Function test_login_success_regular[chromium]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:34: in _launch
    return pw.chromium.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d6edf10>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d703920>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
________ ERROR at setup of test_signup_happy_path_then_login[chromium] _________

request = <SubRequest 'browser' for <Function test_login_success_regular[chromium]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:34: in _launch
    return pw.chromium.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d6edf10>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d703920>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
_______ ERROR at setup of test_signup_validation[chromium-----Username] ________

request = <SubRequest 'browser' for <Function test_login_success_regular[chromium]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:34: in _launch
    return pw.chromium.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d6edf10>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d703920>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_signup_validation[chromium-newguy-not-an-email-StrongPassw0rd!-StrongPassw0rd!-email] _

request = <SubRequest 'browser' for <Function test_login_success_regular[chromium]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:34: in _launch
    return pw.chromium.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d6edf10>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d703920>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_signup_validation[chromium-newguy2-guy2@example.com-short-short-Password must be at least] _

request = <SubRequest 'browser' for <Function test_login_success_regular[chromium]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:34: in _launch
    return pw.chromium.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d6edf10>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d703920>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_signup_validation[chromium-test1-taken@example.com-StrongPassw0rd!-StrongPassw0rd!-Username already exists] _

request = <SubRequest 'browser' for <Function test_login_success_regular[chromium]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:34: in _launch
    return pw.chromium.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d6edf10>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d703920>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_signup_validation[chromium-mismatch-mismatch@example.com-StrongPassw0rd!-Different1!-match] _

request = <SubRequest 'browser' for <Function test_login_success_regular[chromium]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:34: in _launch
    return pw.chromium.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d6edf10>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d703920>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
___ ERROR at setup of test_users_table_visible_for_logged_in_user[chromium] ____

request = <SubRequest 'browser' for <Function test_login_success_regular[chromium]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:34: in _launch
    return pw.chromium.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d6edf10>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d703920>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
_______ ERROR at setup of test_users_table_admin_has_controls[chromium] ________

request = <SubRequest 'browser' for <Function test_login_success_regular[chromium]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:34: in _launch
    return pw.chromium.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d6edf10>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d703920>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
_______ ERROR at setup of test_users_table_search_filters_rows[chromium] _______

request = <SubRequest 'browser' for <Function test_login_success_regular[chromium]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:34: in _launch
    return pw.chromium.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d6edf10>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d703920>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_users_table_sorting_by_username_if_available[chromium] _

request = <SubRequest 'browser' for <Function test_login_success_regular[chromium]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:34: in _launch
    return pw.chromium.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d6edf10>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d703920>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
_____ ERROR at setup of test_logout_via_header_returns_to_login[chromium] ______

request = <SubRequest 'browser' for <Function test_login_success_regular[chromium]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:34: in _launch
    return pw.chromium.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d6edf10>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d703920>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
____________ ERROR at setup of test_login_success_regular[firefox] _____________

request = <SubRequest 'browser' for <Function test_login_success_regular[firefox]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:36: in _launch
    return pw.firefox.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d71ef30>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d4259e0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
_____________ ERROR at setup of test_login_success_admin[firefox] ______________

request = <SubRequest 'browser' for <Function test_login_success_regular[firefox]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:36: in _launch
    return pw.firefox.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d71ef30>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d4259e0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
_____ ERROR at setup of test_login_validation_messages[firefox---Username] _____

request = <SubRequest 'browser' for <Function test_login_success_regular[firefox]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:36: in _launch
    return pw.firefox.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d71ef30>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d4259e0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
__ ERROR at setup of test_login_validation_messages[firefox-test1--Password] ___

request = <SubRequest 'browser' for <Function test_login_success_regular[firefox]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:36: in _launch
    return pw.firefox.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d71ef30>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d4259e0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_login_validation_messages[firefox-notexist-badpass-Invalid username or password] _

request = <SubRequest 'browser' for <Function test_login_success_regular[firefox]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:36: in _launch
    return pw.firefox.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d71ef30>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d4259e0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
__ ERROR at setup of test_login_remember_me_sets_persistent_storage[firefox] ___

request = <SubRequest 'browser' for <Function test_login_success_regular[firefox]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:36: in _launch
    return pw.firefox.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d71ef30>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d4259e0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
___ ERROR at setup of test_redirects_to_login_when_unauthenticated[firefox] ____

request = <SubRequest 'browser' for <Function test_login_success_regular[firefox]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:36: in _launch
    return pw.firefox.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d71ef30>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d4259e0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
_________ ERROR at setup of test_signup_happy_path_then_login[firefox] _________

request = <SubRequest 'browser' for <Function test_login_success_regular[firefox]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:36: in _launch
    return pw.firefox.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d71ef30>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d4259e0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
________ ERROR at setup of test_signup_validation[firefox-----Username] ________

request = <SubRequest 'browser' for <Function test_login_success_regular[firefox]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:36: in _launch
    return pw.firefox.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d71ef30>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d4259e0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_signup_validation[firefox-newguy-not-an-email-StrongPassw0rd!-StrongPassw0rd!-email] _

request = <SubRequest 'browser' for <Function test_login_success_regular[firefox]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:36: in _launch
    return pw.firefox.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d71ef30>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d4259e0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_signup_validation[firefox-newguy2-guy2@example.com-short-short-Password must be at least] _

request = <SubRequest 'browser' for <Function test_login_success_regular[firefox]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:36: in _launch
    return pw.firefox.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d71ef30>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d4259e0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_signup_validation[firefox-test1-taken@example.com-StrongPassw0rd!-StrongPassw0rd!-Username already exists] _

request = <SubRequest 'browser' for <Function test_login_success_regular[firefox]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:36: in _launch
    return pw.firefox.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d71ef30>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d4259e0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_signup_validation[firefox-mismatch-mismatch@example.com-StrongPassw0rd!-Different1!-match] _

request = <SubRequest 'browser' for <Function test_login_success_regular[firefox]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:36: in _launch
    return pw.firefox.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d71ef30>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d4259e0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
____ ERROR at setup of test_users_table_visible_for_logged_in_user[firefox] ____

request = <SubRequest 'browser' for <Function test_login_success_regular[firefox]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:36: in _launch
    return pw.firefox.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d71ef30>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d4259e0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
________ ERROR at setup of test_users_table_admin_has_controls[firefox] ________

request = <SubRequest 'browser' for <Function test_login_success_regular[firefox]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:36: in _launch
    return pw.firefox.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d71ef30>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d4259e0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
_______ ERROR at setup of test_users_table_search_filters_rows[firefox] ________

request = <SubRequest 'browser' for <Function test_login_success_regular[firefox]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:36: in _launch
    return pw.firefox.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d71ef30>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d4259e0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_users_table_sorting_by_username_if_available[firefox] _

request = <SubRequest 'browser' for <Function test_login_success_regular[firefox]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:36: in _launch
    return pw.firefox.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d71ef30>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d4259e0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
______ ERROR at setup of test_logout_via_header_returns_to_login[firefox] ______

request = <SubRequest 'browser' for <Function test_login_success_regular[firefox]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:36: in _launch
    return pw.firefox.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d71ef30>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d4259e0>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
_____________ ERROR at setup of test_login_success_regular[webkit] _____________

request = <SubRequest 'browser' for <Function test_login_success_regular[webkit]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:38: in _launch
    return pw.webkit.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d774650>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d1bc860>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
______________ ERROR at setup of test_login_success_admin[webkit] ______________

request = <SubRequest 'browser' for <Function test_login_success_regular[webkit]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:38: in _launch
    return pw.webkit.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d774650>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d1bc860>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
_____ ERROR at setup of test_login_validation_messages[webkit---Username] ______

request = <SubRequest 'browser' for <Function test_login_success_regular[webkit]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:38: in _launch
    return pw.webkit.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d774650>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d1bc860>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
___ ERROR at setup of test_login_validation_messages[webkit-test1--Password] ___

request = <SubRequest 'browser' for <Function test_login_success_regular[webkit]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:38: in _launch
    return pw.webkit.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d774650>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d1bc860>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_login_validation_messages[webkit-notexist-badpass-Invalid username or password] _

request = <SubRequest 'browser' for <Function test_login_success_regular[webkit]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:38: in _launch
    return pw.webkit.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d774650>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d1bc860>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
___ ERROR at setup of test_login_remember_me_sets_persistent_storage[webkit] ___

request = <SubRequest 'browser' for <Function test_login_success_regular[webkit]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:38: in _launch
    return pw.webkit.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d774650>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d1bc860>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
____ ERROR at setup of test_redirects_to_login_when_unauthenticated[webkit] ____

request = <SubRequest 'browser' for <Function test_login_success_regular[webkit]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:38: in _launch
    return pw.webkit.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d774650>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d1bc860>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
_________ ERROR at setup of test_signup_happy_path_then_login[webkit] __________

request = <SubRequest 'browser' for <Function test_login_success_regular[webkit]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:38: in _launch
    return pw.webkit.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d774650>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d1bc860>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
________ ERROR at setup of test_signup_validation[webkit-----Username] _________

request = <SubRequest 'browser' for <Function test_login_success_regular[webkit]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:38: in _launch
    return pw.webkit.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d774650>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d1bc860>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_signup_validation[webkit-newguy-not-an-email-StrongPassw0rd!-StrongPassw0rd!-email] _

request = <SubRequest 'browser' for <Function test_login_success_regular[webkit]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:38: in _launch
    return pw.webkit.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d774650>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d1bc860>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_signup_validation[webkit-newguy2-guy2@example.com-short-short-Password must be at least] _

request = <SubRequest 'browser' for <Function test_login_success_regular[webkit]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:38: in _launch
    return pw.webkit.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d774650>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d1bc860>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_signup_validation[webkit-test1-taken@example.com-StrongPassw0rd!-StrongPassw0rd!-Username already exists] _

request = <SubRequest 'browser' for <Function test_login_success_regular[webkit]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:38: in _launch
    return pw.webkit.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d774650>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d1bc860>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_signup_validation[webkit-mismatch-mismatch@example.com-StrongPassw0rd!-Different1!-match] _

request = <SubRequest 'browser' for <Function test_login_success_regular[webkit]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:38: in _launch
    return pw.webkit.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d774650>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d1bc860>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
____ ERROR at setup of test_users_table_visible_for_logged_in_user[webkit] _____

request = <SubRequest 'browser' for <Function test_login_success_regular[webkit]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:38: in _launch
    return pw.webkit.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d774650>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d1bc860>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
________ ERROR at setup of test_users_table_admin_has_controls[webkit] _________

request = <SubRequest 'browser' for <Function test_login_success_regular[webkit]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:38: in _launch
    return pw.webkit.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d774650>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d1bc860>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
________ ERROR at setup of test_users_table_search_filters_rows[webkit] ________

request = <SubRequest 'browser' for <Function test_login_success_regular[webkit]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:38: in _launch
    return pw.webkit.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d774650>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d1bc860>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
_ ERROR at setup of test_users_table_sorting_by_username_if_available[webkit] __

request = <SubRequest 'browser' for <Function test_login_success_regular[webkit]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:38: in _launch
    return pw.webkit.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d774650>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d1bc860>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
______ ERROR at setup of test_logout_via_header_returns_to_login[webkit] _______

request = <SubRequest 'browser' for <Function test_login_success_regular[webkit]>>

    @pytest.fixture(name="browser", params=BROWSERS, scope="session")
    def browser_fixture(request) -> Generator[Browser, None, None]:
        """
        Session-scoped Playwright Browser for each engine (runs in parallel with xdist).
        """
        with sync_playwright() as pw:
>           br = _launch(pw, request.param)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

conftest.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
conftest.py:38: in _launch
    return pw.webkit.launch(headless=headless)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/sync_api/_generated.py:14502: in launch
    self._sync(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_browser_type.py:98: in launch
    await self._channel.send(
/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:69: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <playwright._impl._connection.Connection object at 0x7ff67d774650>
cb = <function Channel.send.<locals>.<lambda> at 0x7ff67d1bc860>
is_internal = False, title = None

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(
            task, "__pw_stack__", None
        ) or inspect.stack(0)
    
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
E           ╔════════════════════════════════════════════════════════════╗
E           ║ Looks like Playwright was just installed or updated.       ║
E           ║ Please run the following command to download new browsers: ║
E           ║                                                            ║
E           ║     playwright install                                     ║
E           ║                                                            ║
E           ║ <3 Playwright Team                                         ║
E           ╚════════════════════════════════════════════════════════════╝

/opt/hostedtoolcache/Python/3.12.12/x64/lib/python3.12/site-packages/playwright/_impl/_connection.py:558: Error
=============================== warnings summary ===============================
tests/test_login.py:14
  /home/runner/work/test-pw-user-hub-web-app/test-pw-user-hub-web-app/tests/test_login.py:14: PytestUnknownMarkWarning: Unknown pytest.mark.smoke - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.smoke

tests/test_login.py:35
  /home/runner/work/test-pw-user-hub-web-app/test-pw-user-hub-web-app/tests/test_login.py:35: PytestUnknownMarkWarning: Unknown pytest.mark.regression - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.regression

tests/test_login.py:65
  /home/runner/work/test-pw-user-hub-web-app/test-pw-user-hub-web-app/tests/test_login.py:65: PytestUnknownMarkWarning: Unknown pytest.mark.regression - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.regression

tests/test_login.py:80
  /home/runner/work/test-pw-user-hub-web-app/test-pw-user-hub-web-app/tests/test_login.py:80: PytestUnknownMarkWarning: Unknown pytest.mark.regression - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.regression

tests/test_signup.py:16
  /home/runner/work/test-pw-user-hub-web-app/test-pw-user-hub-web-app/tests/test_signup.py:16: PytestUnknownMarkWarning: Unknown pytest.mark.regression - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.regression

tests/test_signup.py:51
  /home/runner/work/test-pw-user-hub-web-app/test-pw-user-hub-web-app/tests/test_signup.py:51: PytestUnknownMarkWarning: Unknown pytest.mark.regression - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.regression

tests/test_users_table.py:13
  /home/runner/work/test-pw-user-hub-web-app/test-pw-user-hub-web-app/tests/test_users_table.py:13: PytestUnknownMarkWarning: Unknown pytest.mark.smoke - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.smoke

tests/test_users_table.py:24
  /home/runner/work/test-pw-user-hub-web-app/test-pw-user-hub-web-app/tests/test_users_table.py:24: PytestUnknownMarkWarning: Unknown pytest.mark.access - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.access

tests/test_users_table.py:39
  /home/runner/work/test-pw-user-hub-web-app/test-pw-user-hub-web-app/tests/test_users_table.py:39: PytestUnknownMarkWarning: Unknown pytest.mark.regression - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.regression

tests/test_users_table.py:54
  /home/runner/work/test-pw-user-hub-web-app/test-pw-user-hub-web-app/tests/test_users_table.py:54: PytestUnknownMarkWarning: Unknown pytest.mark.regression - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.regression

tests/test_users_table.py:70
  /home/runner/work/test-pw-user-hub-web-app/test-pw-user-hub-web-app/tests/test_users_table.py:70: PytestUnknownMarkWarning: Unknown pytest.mark.smoke - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.smoke

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
ERROR tests/test_login.py::test_login_success_regular[chromium] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_login.py::test_login_success_admin[chromium] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_login.py::test_login_validation_messages[chromium---Username] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_login.py::test_login_validation_messages[chromium-test1--Password] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_login.py::test_login_validation_messages[chromium-notexist-badpass-Invalid username or password] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_login.py::test_login_remember_me_sets_persistent_storage[chromium] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_login.py::test_redirects_to_login_when_unauthenticated[chromium] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_signup.py::test_signup_happy_path_then_login[chromium] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_signup.py::test_signup_validation[chromium-----Username] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_signup.py::test_signup_validation[chromium-newguy-not-an-email-StrongPassw0rd!-StrongPassw0rd!-email] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_signup.py::test_signup_validation[chromium-newguy2-guy2@example.com-short-short-Password must be at least] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_signup.py::test_signup_validation[chromium-test1-taken@example.com-StrongPassw0rd!-StrongPassw0rd!-Username already exists] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_signup.py::test_signup_validation[chromium-mismatch-mismatch@example.com-StrongPassw0rd!-Different1!-match] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_users_table.py::test_users_table_visible_for_logged_in_user[chromium] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_users_table.py::test_users_table_admin_has_controls[chromium] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_users_table.py::test_users_table_search_filters_rows[chromium] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_users_table.py::test_users_table_sorting_by_username_if_available[chromium] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_users_table.py::test_logout_via_header_returns_to_login[chromium] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/chromium_headless_shell-1187/chrome-linux/headless_shell
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_login.py::test_login_success_regular[firefox] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_login.py::test_login_success_admin[firefox] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_login.py::test_login_validation_messages[firefox---Username] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_login.py::test_login_validation_messages[firefox-test1--Password] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_login.py::test_login_validation_messages[firefox-notexist-badpass-Invalid username or password] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_login.py::test_login_remember_me_sets_persistent_storage[firefox] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_login.py::test_redirects_to_login_when_unauthenticated[firefox] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_signup.py::test_signup_happy_path_then_login[firefox] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_signup.py::test_signup_validation[firefox-----Username] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_signup.py::test_signup_validation[firefox-newguy-not-an-email-StrongPassw0rd!-StrongPassw0rd!-email] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_signup.py::test_signup_validation[firefox-newguy2-guy2@example.com-short-short-Password must be at least] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_signup.py::test_signup_validation[firefox-test1-taken@example.com-StrongPassw0rd!-StrongPassw0rd!-Username already exists] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_signup.py::test_signup_validation[firefox-mismatch-mismatch@example.com-StrongPassw0rd!-Different1!-match] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_users_table.py::test_users_table_visible_for_logged_in_user[firefox] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_users_table.py::test_users_table_admin_has_controls[firefox] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_users_table.py::test_users_table_search_filters_rows[firefox] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_users_table.py::test_users_table_sorting_by_username_if_available[firefox] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_users_table.py::test_logout_via_header_returns_to_login[firefox] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/firefox-1490/firefox/firefox
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_login.py::test_login_success_regular[webkit] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_login.py::test_login_success_admin[webkit] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_login.py::test_login_validation_messages[webkit---Username] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_login.py::test_login_validation_messages[webkit-test1--Password] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_login.py::test_login_validation_messages[webkit-notexist-badpass-Invalid username or password] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_login.py::test_login_remember_me_sets_persistent_storage[webkit] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_login.py::test_redirects_to_login_when_unauthenticated[webkit] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_signup.py::test_signup_happy_path_then_login[webkit] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_signup.py::test_signup_validation[webkit-----Username] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_signup.py::test_signup_validation[webkit-newguy-not-an-email-StrongPassw0rd!-StrongPassw0rd!-email] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_signup.py::test_signup_validation[webkit-newguy2-guy2@example.com-short-short-Password must be at least] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_signup.py::test_signup_validation[webkit-test1-taken@example.com-StrongPassw0rd!-StrongPassw0rd!-Username already exists] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_signup.py::test_signup_validation[webkit-mismatch-mismatch@example.com-StrongPassw0rd!-Different1!-match] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_users_table.py::test_users_table_visible_for_logged_in_user[webkit] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ���
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_users_table.py::test_users_table_admin_has_controls[webkit] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_users_table.py::test_users_table_search_filters_rows[webkit] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_users_table.py::test_users_table_sorting_by_username_if_available[webkit] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
ERROR tests/test_users_table.py::test_logout_via_header_returns_to_login[webkit] - playwright._impl._errors.Error: BrowserType.launch: Executable doesn't exist at /home/runner/.cache/ms-playwright/webkit-2203/pw_run.sh
╔════════════════════════════════════════════════════════════╗
║ Looks like Playwright was just installed or updated.       ║
║ Please run the following command to download new browsers: ║
║                                                            ║
║     playwright install                                     ║
║                                                            ║
║ <3 Playwright Team                                         ║
╚════════════════════════════════════════════════════════════╝
======================= 11 warnings, 54 errors in 7.42s ========================
Error: Process completed with exit code 1.





django.yml file

name: Django CI

on:
  push:
    branches: [ "main" ]
    paths:
      - "**"
      - ".github/workflows/django.yml"
  pull_request:
    branches: [ "main" ]
    paths:
      - "**"
      - ".github/workflows/django.yml"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    env:
      PYTHONPATH: .            # make repo importable
      SECRET_KEY: ci-not-secret
      DEBUG: "0"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
            pyproject.toml

      - name: Install dependencies
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          elif [ -f requirements-dev.txt ]; then
            pip install -r requirements-dev.txt
          elif [ -f pyproject.toml ]; then
            pip install .
          else
            echo "::error::No dependency manifest found (requirements*.txt or pyproject.toml)"; exit 1
          fi
          python -c "import sys; print('Python', sys.version)"
          python -c "import importlib.util,sys; print('Django present?:', bool(importlib.util.find_spec('django')))"

      - name: Detect Django settings module
        id: detect
        shell: bash
        run: |
          set -euo pipefail
          # Find a settings.py that looks like Django (contains INSTALLED_APPS)
          CANDIDATE="$(grep -rl --include='settings.py' 'INSTALLED_APPS' . | head -n1 || true)"
          if [ -z "${CANDIDATE:-}" ]; then
            echo "has_settings=false" >> "$GITHUB_OUTPUT"
            echo "No Django settings module found (no settings.py with INSTALLED_APPS)."
            exit 0
          fi
          # Convert file path -> module path (e.g., config/settings.py -> config.settings)
          MOD="$(python -c "import pathlib; p=pathlib.Path('${CANDIDATE}'); print('.'.join(p.with_suffix('').parts))")"
          echo "Detected settings: ${MOD}"
          echo "DJANGO_SETTINGS_MODULE=${MOD}" >> "$GITHUB_ENV"
          echo "has_settings=true" >> "$GITHUB_OUTPUT"

      - name: Verify settings import
        if: steps.detect.outputs.has_settings == 'true'
        run: |
          python -c "import os,importlib,traceback; m=os.environ['DJANGO_SETTINGS_MODULE']; print('DJANGO_SETTINGS_MODULE =', m); importlib.import_module(m); print('Imported OK')"

      - name: Django system checks
        if: steps.detect.outputs.has_settings == 'true'
        env:
          DJANGO_SETTINGS_MODULE: ${{ env.DJANGO_SETTINGS_MODULE }}
        run: |
          python -m django --version
          python -m django check --deploy -v 2

      - name: Check for missing migrations
        if: steps.detect.outputs.has_settings == 'true'
        env:
          DJANGO_SETTINGS_MODULE: ${{ env.DJANGO_SETTINGS_MODULE }}
        run: |
          python -m django makemigrations --check --dry-run

      - name: Migrate DB
        if: steps.detect.outputs.has_settings == 'true'
        env:
          DJANGO_SETTINGS_MODULE: ${{ env.DJANGO_SETTINGS_MODULE }}
        run: |
          python -m django migrate --noinput

      - name: Run tests
        run: |
          if python -c "import importlib.util; import sys; sys.exit(0 if importlib.util.find_spec('pytest') else 1)"; then
            pytest -q
          elif [ "${{ steps.detect.outputs.has_settings }}" = "true" ]; then
            python -m django test --noinput -v 2
          else
            echo "No pytest and no Django settings detected; nothing to run."; exit 0
          fi

please analyze the attached project and provide an exact, non-guess, working solution to fix the django check failure
